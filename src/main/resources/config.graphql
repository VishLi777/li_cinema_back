schema {
    query: Query
    mutation: Mutation
}

type Query {
    allCinema: [Cinema]
    cinema(id: Long): Cinema
    allHall: [Hall]
    hall(id: Long): Hall
    allHallsByCinemaId(cinema_id: Long): [Hall]
    allMovie: [Movie]
    movie(id: Long): Movie
    allReview: [Review]
    review(id: Long): Review
    session(id: Long): Session
    allSessionsByHallId(hall_id: Long): [Session]
    allSessionsByMovieId(movie_id: Long): [Session]
    order(id: Long): Order
    allOrdersByOrderStatus(status: String): [Order]
    allOrdersByUserIdAndOrderStatus(user_id: Long, status: String): [Order]

}

type Mutation {
    editCinema(id: Long!, name: String, address: String, rating: Long): Cinema
    editHall(id: Long!, number: Int, json: String): Hall
}

type Cinema {
    id: Long
    name: String
    address: String
    rating: Float
    halls: [Hall]
}

type Hall {
    id: Long
    number: Int
    json: String
    cinema: Cinema
}

type Movie {
    id: Long
    name: String
    author: String
    duration: Long
    start_date_of_rental: Long
    end_date_of_rental: Long
}

type Review {
    id: Long
    description: String
}

type Session {
    id: Long
    start_time_of_display: Long
    end_time_of_display: Long
    date: String
    price: Long
    json: String
    movie: Movie
    hall: Hall
}

type Order {
    id: Long
    final_price: String
    status: String
    session: Session
}

