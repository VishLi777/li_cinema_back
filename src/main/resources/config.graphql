schema {
 query: Query
}

type Query {
    allCinema: [Cinema]
    cinema(id: Long): Cinema
    allHall: [Hall]
    hall(id: Long): Hall
    allHallsByCinemaId(cinema_id: Long): [Hall]
    allMovie: [Movie]
    movie(id: Long): Movie
    allReview: [Review]
    review(id: Long): Review
}

type Cinema {
    id: Long
    name: String
    address: String
    rating: Float
    halls: [Hall]
}

type Hall {
    id: Long
    number: Int
    json: String
    cinema: Cinema
}

type Movie {
    id: Long
    name: String
    author: String
    duration: Long
    start_date_of_rental: Long
    end_date_of_rental: Long
}

type Review {
    id: Long
    description: String
}


    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "start_time_of_display")
    private Long start_time_of_display;

    @Column(name = "end_time_of_display")
    private Long end_time_of_display;

    @Column(name = "data")
    private Date date;

    @Column(name = "price")
    private Long price;

    @Column(name = "json")
    private String json;